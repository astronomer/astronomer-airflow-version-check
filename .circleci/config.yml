version: 2.1

parameters:
  deploy_bucket:
    type: string
    default: "pip.astronomer.io"

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - publish:
          context: "Pip Deploy"
          requires: [build]
          # Run this stage only for version-number tagged builds
          filters:
            tags:
              only: /^v\d+[.\d]+.*/
            branches:
              ignore: /.*/
jobs:
  build:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Install test deps
          command: |
            # Use a virtual env to encapsulate everything in one folder for caching
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r dev-requirements.txt
      - run:
          name: run_tests
          command: |
            . .venv/bin/activate
            mkdir test-results
            pytest --junitxml=test-results/junit.xml
      - run:
          command: |
            cp .pre-commit-config.yaml pre-commit-cache-key.txt
            python --version --version >> pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}
      - run:
          command: |
            . .venv/bin/activate
            pip install pre-commit
            pre-commit run --all-files --show-diff-on-failure
      - save_cache:
          key: v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit
      - run:
          name: build_wheel
          command: |
            . .venv/bin/activate
            python3 setup.py sdist bdist_wheel
      - store_test_results:
          path: test-results

      - persist_to_workspace:
          root: .
          paths:
            dist/*
      - store_artifacts:
          path: test-results

  publish:
    docker:
      - image: cimg/python:3.11.3-node
    steps:
      - checkout
      - run:
          name: "Install gcloud"
          command: |-
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \
            && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - \
            && sudo apt-get update -y \
            && sudo apt-get install google-cloud-cli -y
      - run:
          name: verify tag
          command: |-

            python3 -m venv .venv
            . .venv/bin/activate
            pip install --upgrade pip setuptools wheel
            pip install -r dev-requirements.txt
            python3 setup.py verify
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Checkout release-utilities
          command: |-
            git clone git@github.com:astronomer/pip-release-utilities.git
      - run:
          name: Deploy to GCS Bucket
          # Even though there is a project field in the JSON credential, gsutil still needs a project set, so lets set pull it from it
          command: |-
            pip-release-utilities/gsutil-auth-helper.sh
            gsutil -m rsync -a public-read /tmp/workspace/dist/ gs://<< pipeline.parameters.deploy_bucket >>/simple/astronomer-airflow-version-check
      - run:
          name: Rebuild index.html
          command: |-
            pip-release-utilities/build-index-page.sh "<< pipeline.parameters.deploy_bucket >>" simple/astronomer-airflow-version-check
      - store_artifacts:
          path: /tmp/workspace/dist/
          destination: dist
